config.Formatters.Remove(config.Formatters.XmlFormatter);
 config.Formatters.JsonFormatter.SerializerSettings.PreserveReferencesHandling = PreserveReferencesHandling.None;
config.Formatters.JsonFormatter.SerializerSettings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore;
config.Formatters.JsonFormatter.SerializerSettings.Formatting = Formatting.Indented;
config.Formatters.JsonFormatter.SupportedMediaTypes.Add(new MediaTypeHeaderValue("application/json"));




json to object

JsonConvert.DeserializeObject<Airlineschedulefilter>(objs.Getrequestresponse);




dataset from in asp.net mvc code:



 public static DataSet Qry_WithDataSet(string ProcWithParameter)
        {
            IErrorRepository error = new ErrorRepository();
            //ErrorLog.ErrLog Errlog = new ErrLog();
            try
            {
                if (GetConnStr() != null)
                {
                    SqlConnection MyCon = new SqlConnection(mstrPath);

                    MyCon.Open();

                    SqlCommand MyCommand = new SqlCommand(ProcWithParameter, MyCon);
                    MyCommand.CommandTimeout = 0;

                    SqlDataAdapter MyDataAdapter = new SqlDataAdapter();

                    MyDataAdapter.SelectCommand = MyCommand;

                    DataSet dtReturn = new DataSet();

                    MyDataAdapter.Fill(dtReturn);

                    MyCommand.Dispose();

                    MyDataAdapter.Dispose();

                    MyCon.Close();

                    return dtReturn;
                }
                else
                {
                    return null;
                }
            }
            catch (SqlException sqlEx)
            {
                error.DBlogError("Qry_WithDataSet", ProcWithParameter, "Output" + "\n" + sqlEx);
                return null;
            }
            catch (Exception ex)
            {
                error.DBlogError("DBError Method : Qry_WithDataSet", ProcWithParameter, "Output" + "\n" + ex);
                return null;
            }
        }



   string parameter = "'" + obj.FlightId + "','" + obj.Airlinecode + "','" + obj.FlightNo + "','" + obj.Origin + "','" + obj.Destination + "','" + obj.Flighttiming + "','" + obj.UserId + "'";
            try
            {
                error.Log("AirlineRespository", "GetAirlineSchedulesearch", "Sp Name : ADM_GET_AirlineScheduleFilter " + parameter);
                _CommonModel = _Clsbussiness.GetAirlineSchedule("ADM_GET_AirlineScheduleFilter " + parameter);
                return _CommonModel;
            }


